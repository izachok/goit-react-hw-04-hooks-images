{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Modal/Modal.js","components/ImageGallery/ImageGallery.js","services/pixabay-api.js","components/Button/Button.js","App.js","index.js","components/Modal/Modal.module.css"],"names":["Searchbar","onSubmit","useState","query","setQuery","className","e","preventDefault","result","trim","type","autoComplete","autoFocus","placeholder","onChange","target","value","ImageGalleryItem","item","onClick","src","webformatURL","alt","tags","modalRoot","document","querySelector","Modal","onClose","children","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","s","backdrop","currentTarget","content","ImageGallery","items","imageIndex","setImageIndex","showModal","setShowModal","map","index","handleClick","prev","largeImageURL","API_KEY","Button","props","Status","App","images","setImages","page","setPage","isMoreAvailable","setIsMoreAvailable","error","setError","status","setStatus","fetch","then","r","ok","json","Promise","reject","Error","fetchImagesByQuery","results","resultsCount","hits","length","checkAvailability","scrollTo","top","documentElement","scrollHeight","behavior","catch","itemsLength","message","color","height","width","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.87140198.chunk.js","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const result = query.trim();\n    if (result) {\n      onSubmit(result);\n    }\n    setQuery('');\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ImageGalleryItem({ item, onClick }) {\n  return (\n    <li className=\"ImageGalleryItem\" onClick={onClick}>\n      <img\n        src={item.webformatURL}\n        alt={item.tags}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  item: PropTypes.shape({\n    webformatURL: PropTypes.string.isRequired,\n    tags: PropTypes.string,\n  }).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ onClose, children }) {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={s.backdrop} onClick={handleBackdropClick}>\n      <div className={s.content}>{children}</div>\n    </div>,\n    modalRoot,\n  );\n}\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport Modal from '../Modal';\n\nexport default function ImageGallery({ items }) {\n  const [imageIndex, setImageIndex] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  function handleClick(index) {\n    setImageIndex(index);\n    setShowModal(true);\n  }\n\n  const toggleModal = () => {\n    setShowModal(prev => !prev);\n  };\n\n  return (\n    <>\n      <ul className=\"ImageGallery\">\n        {items.map((item, index) => (\n          <ImageGalleryItem\n            key={index}\n            item={item}\n            onClick={() => {\n              handleClick(index);\n            }}\n          />\n        ))}\n      </ul>\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <img\n            src={items[imageIndex].largeImageURL}\n            alt={items[imageIndex].tags}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\nImageGallery.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object),\n};\n","const API_KEY = '22249367-47a1cf5ba4f0f2c3f03999b11';\nconst IMAGES_PER_PAGE = 12;\n\nfunction fetchImagesByQuery(query, page = 1) {\n  return fetch(\n    `https://pixabay.com/api/?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${IMAGES_PER_PAGE}`,\n  ).then(r => {\n    if (r.ok) {\n      return r.json();\n    }\n    return Promise.reject(new Error(`Can't get images for ${query}`));\n  });\n}\n\nexport { fetchImagesByQuery, IMAGES_PER_PAGE };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Button(props) {\n  return (\n    <button type=\"button\" onClick={props.onClick} className=\"Button\">\n      {props.children}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { useState, useEffect } from 'react';\nimport Loader from 'react-loader-spinner';\nimport './App.css';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport { fetchImagesByQuery, IMAGES_PER_PAGE } from './services/pixabay-api';\nimport Button from './components/Button/Button';\n\nconst Status = {\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n  NEED_LOADING: 'needLoading',\n};\n\nexport default function App() {\n  const [query, setQuery] = useState('');\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isMoreAvailable, setIsMoreAvailable] = useState(false);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(null);\n\n  useEffect(() => {\n    if (status === Status.NEED_LOADING) {\n      setStatus(Status.PENDING);\n\n      fetchImagesByQuery(query, page)\n        .then(results => {\n          const resultsCount = results.hits.length;\n          if (resultsCount === 0) {\n            setError(new Error(`No search results for ${query}`));\n            setStatus(Status.REJECTED);\n            return;\n          }\n\n          setImages(prev => [...images, ...results.hits]);\n          setIsMoreAvailable(checkAvailability(resultsCount));\n          setStatus(Status.RESOLVED);\n        })\n        .then(() => {\n          if (page !== 1) {\n            window.scrollTo({\n              top: document.documentElement.scrollHeight,\n              behavior: 'smooth',\n            });\n          }\n        })\n        .catch(error => {\n          setError(error);\n          setStatus(Status.REJECTED);\n        });\n    }\n  }, [images, page, query, status]);\n\n  const handleSearchSubmit = query => {\n    setImages([]);\n    setQuery(query);\n    setPage(1);\n    setStatus(Status.NEED_LOADING);\n  };\n\n  const handleLoadMore = () => {\n    setPage(prev => prev + 1);\n    setStatus(Status.NEED_LOADING);\n  };\n\n  const checkAvailability = itemsLength => {\n    return !(itemsLength < IMAGES_PER_PAGE);\n  };\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={handleSearchSubmit} />\n      {status === Status.REJECTED && <div>{error.message}</div>}\n      <ImageGallery items={images} />\n      {status === Status.PENDING && (\n        <Loader type=\"Audio\" color=\"#00BFFF\" height={100} width={100} />\n      )}\n      {status === Status.RESOLVED && isMoreAvailable && (\n        <Button onClick={handleLoadMore}>Load more</Button>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './styles.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3FAPo\",\"content\":\"Modal_content__1VIbZ\"};"],"sourceRoot":""}